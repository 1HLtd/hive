##
##  Apache Makefile, automatically generated by Configure script.
##  Hand-edited changes will be lost if the Configure script is re-run.
##  Sources: - ../Makefile.config (via Configuration.apaci)
##           - ./Makefile.tmpl
##

##
##  Inherited Makefile options from Configure script
##  (Begin of automatically generated section)
##
TAG=$(shell git describe --all --tags --always --long 2>/dev/null)
ifeq "$(TAG)" ""
TAG=$(shell cat RELEASE || echo unknown)
endif
SRCDIR=./std-includes
EXTRA_CFLAGS=`$(SRCDIR)/apaci`
EXTRA_LDFLAGS=
EXTRA_LIBS=
EXTRA_INCLUDES=
EXTRA_DEPS=
OSDIR=$(SRCDIR)
INCDIR=$(SRCDIR)
INCLUDES0=-I$(OSDIR) -I$(INCDIR)
SHELL=/bin/sh
OS=Linux
CC=gcc
CPP=gcc -E
TARGET=httpd
OPTIM=
CFLAGS1= -s -DLINUX=22 -DHAVE_SET_DUMPABLE -DUSE_HSREGEX -DNO_DL_NEEDED -Wall -Wextra -W -Wformat-security
INCLUDES1=
LIBS_SHLIB=
LDFLAGS1=
MFLAGS_STATIC=--no-print-directory
REGLIB=regex/libregex.a
EXPATLIB=
RANLIB=ranlib
#LIBS1=  -lm -lcrypt -lexpat
LIBS1=
##
##  (End of automatically generated section)
##

# Get the current commit and branch

# To compile the (experimental) SSL support into 'ab' use 
# something like:
#
# SSLLOC=/usr/local
# CFLAGS=-DUSE_SSL $(OPTIM) $(CFLAGS1) $(EXTRA_CFLAGS)
# LIBS=-L$(SSLLOC)/lib -lssl -lcrypto -lm -lap -los $(EXTRA_LIBS) $(LIBS1)
# INCLUDES=-I$(SSLLOC)/include $(INCLUDES1) $(INCLUDES0) $(EXTRA_INCLUDES)

CFLAGS=$(OPTIM) $(CFLAGS1) $(EXTRA_CFLAGS)
#LIBS=-lm -lap -los $(EXTRA_LIBS) $(LIBS1)
LIBS=
INCLUDES=$(INCLUDES1) $(INCLUDES0) $(EXTRA_INCLUDES)
LDFLAGS=$(LDFLAGS1) $(EXTRA_LDFLAGS) -L$(OSDIR)

TARGETS=suexec

OBJS=suexec.o

.c.o: 
	$(CC) -g -c $(INCLUDES) $(CFLAGS) $<

all: $(TARGETS)

time.o: time.c time.h log.h
	$(CC) $(CFLAGS) -c $<

mounts_check.o: mounts_check.c mounts_check.h log.h
	$(CC) $(CFLAGS) -c $<

rlimit_config.o: rlimit_config.c rlimit_config.h
	$(CC) $(CFLAGS) -c $<

memstats.o: memstats.c memstats.h
	$(CC) $(CFLAGS) -c $<

iostats.o: iostats.c iostats.h
	$(CC) $(CFLAGS) -c $<

suexec.o: suexec.c $(INCDIR)/*.h *.h
	$(CC) $(CFLAGS) -I$(INCDIR) -DBUILD_COMMIT=\"$(TAG)\" -c $<

checkgid: checkgid.o
	$(CC) $(CFLAGS) -o checkgid $(LDFLAGS) checkgid.o $(LIBS)

suexec: suexec.o rlimit_config.o mounts_check.o time.o memstats.o iostats.o
	$(CC) $(CFLAGS) -o suexec $(LDFLAGS) suexec.o rlimit_config.o mounts_check.o time.o memstats.o iostats.o $(LIBS)

strip: suexec
	strip -s suexec

test:
	chmod 4711 suexec && ./suexec -V
#suexec: suexec.o
#	$(CC) -g $(CFLAGS) -o suexec $(LDFLAGS) suexec.o $(LIBS) \
#	&& chmod 4755 suexec && rm -f /usr/local/apache/bin/suexec \
#    && mv suexec /usr/local/apache/bin/suexec && /usr/local/apache/bin/suexec -V

mm-test: mm-test.o
	$(CC) $(CFLAGS) -o mm-test $(LDFLAGS) mm-test.o $(LIBS) 

clean:
	rm -f $(TARGETS) *.o

distclean: clean
	-rm -f Makefile

# We really don't expect end users to use this rule.  It works only with
# gcc, and rebuilds Makefile.tmpl.  You have to re-run Configure after
# using it.
depend:
	cp Makefile.tmpl Makefile.tmpl.bak \
	    && sed -ne '1,/^# DO NOT REMOVE/p' Makefile.tmpl > Makefile.new \
	    && gcc -MM $(INCLUDES) $(CFLAGS) *.c >> Makefile.new \
	    && sed -e '1,$$s: $(INCDIR)/: $$(INCDIR)/:g' \
	           -e '1,$$s: $(OSDIR)/: $$(OSDIR)/:g' Makefile.new \
		> Makefile.tmpl \
	    && rm Makefile.new

#Dependencies

$(OBJS): Makefile

# DO NOT REMOVE

install:
	/bin/cp -af suexec $(DESTDIR)/usr/local/apache/bin/suexec && chmod 4711 $(DESTDIR)/usr/local/apache/bin/suexec
